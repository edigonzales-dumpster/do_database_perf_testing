import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

def pathToTempFolder = System.getProperty("java.io.tmpdir") + "/gretl-share/"
def pathToUnzipFolder = Paths.get(pathToTempFolder, "unzip_data")

task downloadMOpublic(type: Download) {
    description = "Download Data"
    src "https://s3.eu-central-1.amazonaws.com/ch.so.agi.geodata/ch.so.agi_mopublic_xtf.zip"
    dest pathToTempFolder
    overwrite true

    doLast {
        println "File downloaded to: " + pathToTempFolder
    }        
}

task unzipMOpublic(type: Copy, dependsOn: 'downloadMOpublic') {
    description = "Unzip Data"
    from zipTree(Paths.get(pathToTempFolder, "ch.so.agi_mopublic_xtf.zip"))
    into file(pathToUnzipFolder)
    include "**/*.xtf"
    rename { String fileName ->
        if (fileName.contains("ch.so.agi_mopublic")) {
            return "ch.so.agi_mopublic.xtf"
        }
        return fileName
    }

    doLast {
        println "File unzipped to directory: " + pathToUnzipFolder
    }    
}

task importMOpublic(type: Ili2pgImport, dependsOn: 'unzipMOpublic') {
    description = "Import Data"
    database = [dbUriDo, dbUserDo, dbPwdDo]
    dbschema = "agi_mopublic_pub"
    dataFile = file(Paths.get(pathToUnzipFolder.toString(), "ch.so.agi_mopublic.xtf"))
    disableValidation = true
    deleteData = true
}


